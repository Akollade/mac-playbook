---
- name: "{{ php_current_version }} - Install"
  homebrew:
    name: "shivammathur/php/php@{{ php_current_version }}"
    state: "{{ homebrew_package_state }}"

- name: "{{ php_current_version }} - brew unlink"
  shell: "brew unlink php@{{ php_current_version }}"
  register: php_brew_unlink_result
  changed_when: "'0 symlinks removed' not in php_brew_unlink_result.stdout"

- name: "{{ php_current_version }} - Register FPM port"
  set_fact:
    php_fpm_port: "{{ '90' + php_current_version|replace('.', '') }}"

- name: "{{ php_current_version }} - Get PECL path"
  shell: "brew --prefix shivammathur/php/php@{{ php_current_version }}"
  register: brew_prefix_php
  changed_when: False

- name: "{{ php_current_version }} - Register PECL binary"
  set_fact:
    pecl_bin: "{{ brew_prefix_php.stdout }}/bin/pecl"

- name: "{{ php_current_version }} - Update PECL"
  shell: "{{ pecl_bin }} channel-update pecl.php.net"
  register: pecl_update_result
  changed_when: "'succeeded' in pecl_update_result.stdout"

- name: "{{ php_current_version }} - Register extensions for current version"
  set_fact:
    php_current_version_extensions: "php_{{ php_current_version|replace('.', '') }}_extensions"

- name: "{{ php_current_version }} - Install extensions with PECL"
  shell: "{{ pecl_bin }} install -n {{ item }}"
  register: pecl_result
  changed_when: "pecl_result.rc == 0"
  failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
  with_items: "{{ lookup('vars', php_current_version_extensions, default=php_extensions) }}"
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - Register extensions for current version"
  set_fact:
    php_current_version_install_xdebug: "{{ install_xdebug and php_current_version not in disable_xdebug_install_for_versions }}"

- name: "{{ php_current_version }} - Install xdebug"
  shell: "{{ pecl_bin }} install -n {{ xdebug_package }}"
  register: pecl_result
  changed_when: "pecl_result.rc == 0"
  failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
  when: php_current_version_install_xdebug
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - Check if ext-xdebug.ini exists"
  stat:
    path: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/conf.d/ext-xdebug.ini"
  register: stat_ext_debug_ini
  when: php_current_version_install_xdebug

- name: "{{ php_current_version }} - Check if ext-xdebug.ini.disabled exists"
  stat:
    path: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/conf.d/ext-xdebug.ini.disabled"
  register: stat_ext_debug_ini_disabled
  when: php_current_version_install_xdebug

- name: "{{ php_current_version }} - Add config file to load xdebug"
  lineinfile:
    path: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/conf.d/ext-xdebug.ini"
    state: present
    line: 'zend_extension="xdebug.so"'
    create: yes
  when: php_current_version_install_xdebug and not stat_ext_debug_ini.stat.exists and not stat_ext_debug_ini_disabled.stat.exists

- name: "{{ php_current_version }} - Set FPM config"
  template:
    src: php-fpm.conf.j2
    dest: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/php-fpm.conf"
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - Delete old FPM config"
  file:
    dest: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/php-fpm.d/www.conf"
    state: absent
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - A config files to load extensions"
  ini_file:
    dest: "{{ brew_prefix }}/etc/php/{{ php_current_version }}/conf.d/ext-{{ item }}.ini"
    option: "extension"
    value: "{{ item }}.so"
    exclusive: false
  become: true
  with_items: "{{ php_extensions }}"
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - Delete old custom config file"
  file:
    dest: "{{ php_custom_config_file }}"
    state: absent
  notify: Restart PHP-FPM

- name: "{{ php_current_version }} - Add custom config file"
  ini_file:
    dest: "{{ php_custom_config_file }}"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  when: item.when|default(true)
  become: true
  with_items: "{{ php_custom_config }}"
  notify: Restart PHP-FPM

- name: Set .load_php for default version
  template:
    src: load_php.j2
    dest: "~/.load_php"
    mode: 0755
  when: php_current_version == php_default_version
