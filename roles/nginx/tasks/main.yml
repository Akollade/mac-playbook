---

- name: Generate SSL certificates
  include_tasks: certificates.yml

- name: Generate config for homepage
  template:
    src: local-homepage/config.php.j2
    dest: '{{ playbook_dev_path | realpath }}/local-homepage/config/nginx.config.php'

- name: Install nginx
  homebrew:
    name: nginx
    state: "{{ homebrew_package_state }}"

- name: Create conf directory
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - "{{ nginx_path }}/logs"
    - "{{ nginx_path }}/sites-available"
    - "{{ nginx_path }}/sites-enabled"
    - "{{ nginx_path }}/conf.d"
    - "{{ nginx_path }}/ssl"

- name: Add confs
  template:
    src: "conf/{{ item }}.j2"
    dest: "{{ nginx_path }}/conf.d/{{ item }}"
  with_items: "{{ nginx_site_types }}"

- name: Add nginx conf
  template:
    src: nginx.conf.j2
    dest: '{{ nginx_conf_path }}'

- name: Add default site
  template:
    src: sites/default.j2
    dest: '{{ nginx_path }}/sites-available/default'

- name: Enable default site
  file:
    src: '{{ nginx_path }}/sites-available/default'
    dest: '{{ nginx_path }}/sites-enabled/default'
    state: link

- name: Check config of each sites
  fail:
    msg: "Type {{ item.type }} does not exist"
  when: item.type not in nginx_site_types
  with_items: "{{ nginx_sites }}"

- name: Add site
  template:
    src: sites/site.j2
    dest: '{{ nginx_path }}/sites-available/dev'

- name: Enable site
  file:
    src: '{{ nginx_path }}/sites-available/dev'
    dest: '{{ nginx_path }}/sites-enabled/dev'
    state: link

- debug: msg="restart nginx"
  notify: Restart nginx
  changed_when: true

- name: Force execution of handlers
  meta: flush_handlers
